version: '3.9'

services:
  app:
    restart: always
    build:
      context: ./
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.kafka.consumer.bootstrap-servers": "kafka:9092",
        "spring.kafka.consumer.key-deserializer": "org.apache.kafka.common.serialization.StringDeserializer",
        "spring.kafka.consumer.value-deserializer": "org.apache.kafka.common.serialization.StringDeserializer",
        "spring.kafka.consumer.group-id": "consumer-decks",
        "spring.kafka.consumer.enable-auto-commit": true,
        "spring.redis.database": 0,
        "spring.redis.host": "redis",
        "spring.redis.connect-timeout": "500ms",
        "spring.redis.port": 6379,
        "spring.redis.timeout": "500ms"
      }'
    ports:
      - "8917:8917"
    depends_on:
      - kafka
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  redis:
    driver: local
